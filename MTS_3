Question 1
- app.module.ts
 import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import {FormsModule,ReactiveFormsModule} from '@angular/forms';
import { AppComponent } from './app.component';

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,FormsModule,ReactiveFormsModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }

-app.component.html
<div class="card" style="width: 30rem;" height="15rem;">
  <img src="/assets/oneplus.jpg" class="card-img-top" alt="image loading....">
  <div class="card-body">
    <h4>Category:{{ProductTitle}}</h4>
    <h4>Price:{{ProductPrice}}</h4>
    <h4>Stock:{{Stock}}</h4>
    <input type="submit" class="bg-success"  value="ADD TO CART" (click)="store(myform)" >
  </div>
</div>

-app.component.ts
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  ProductTitle:string="ONE PLUS";
  ProductPrice:number=40000;
  Stock:number=5;
}





Question 3
- app.module.ts
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { FormsModule,ReactiveFormsModule } from '@angular/forms';
import { AppComponent } from './app.component';
import { ProductComponent } from './product/product.component';

@NgModule({
  declarations: [
    AppComponent,
    ProductComponent
  ],
  imports: [
    BrowserModule,,FormsModule,ReactiveFormsModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }

-app.component.html
<div class = "container">
  <div class="panel panel-primary">
  <h3  style="text-align: center;">PRODUCT DETAILS</h3>
<form [formGroup]="myform" (ngSubmit)="store()">
<div class="text-center">
  <div class="form-group">
    <label for="pname">Product name</label>
    <input type="text" class="form-control" id="pname" formControlName="pname">
    <small style="color:red" *ngIf="name.invalid && name.touched">*Name is Required</small>
   </div>
  </div>
  <div class="text-center">
  <div class="form-group">
    <label for="pbrand">Product Brand</label>
    <input type="text" class="form-control" id="pbrand" formControlName="pbrand">
    <small style="color:red" *ngIf="pbrand.invalid && pbrand.touched">*Brand is Required</small> 
  </div>
</div>
<div class="text-center">
  <div class="form-group">
    <label for="pprice">Product Price</label>
    <input type="text" class="form-control" id="pprice" formControlName="pprice">
    <small style="color:red" *ngIf="pprice.invalid && pprice.touched">*Price is Required</small>
   </div>
  </div>
   <div class="text-center">
   <button class="btn btn-primary" [disabled]="myformform.invalid">Store</button></div>
</form>
</div>
</div>
<div style = "margin-top: 10px;">
   <div class="productdetails">
     <table class="table">
       <thead class="thread-light">
         <tr>
           <th>PRODUCT NAME</th>
           <th>PRODUCT BRAND</th>
           <th>PRODUCT PRICE</th>
         </tr>
       </thead>
       <tbody>
         <tr>
           <td>{{pname}}</td>
           <td>{{pbrand}}</td>
           <td>{{pprice}}</td>
         </tr>
       </tbody>
     </table>
   </div>
</div>


-app.component.ts
import { Component } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';
@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
    myform:FormGroup;
    pname:string;
    pbrand:string;
    pprice:number;
    
    constructor(){
      this.myform=new FormGroup({
        pname:new FormControl("",[Validators.required]),
        pbrand:new FormControl("",[Validators.required]),
        pprice:new FormControl("",[Validators.required])
      });
    }
    get name(){
      return this.myform.get('pname');
    }
    get brand(){
      return this.myform.get('pbrand');
    }
    get price(){
      return this.myform.get('pprice');
    }

    store(){
      console.log(this.myform.value.pname);
      console.log(this.myform.value.pbrand);
      console.log(this.myform.value.pprice);
      
        this.myform.reset();
    }
 
}
